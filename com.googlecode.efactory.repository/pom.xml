<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>efactory</artifactId>
		<groupId>com.googlecode.efactory</groupId>
		<version>0.10.0-SNAPSHOT</version>
	</parent>
	<groupId>com.googlecode.efactory</groupId>
	<artifactId>com.googlecode.efactory.repository</artifactId>
	<packaging>eclipse-repository</packaging>
	
	<profiles>
		<profile>
			<id>deploy</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- alternatively, you could also use the org.apache.maven.plugins:maven-scm-plugin, 
						like e.g. https://github.com/tonnymadsen/ui-bindings/blob/master/com.rcpcompany.updatesite/pom.xml 
						does -->
					<plugin>
						<groupId>com.github.github</groupId>
						<artifactId>site-maven-plugin</artifactId>
						<version>0.8</version>
						<configuration>
							<!-- git commit message -->
							<message>Repo for ${project.groupId}:${project.artifactId}:${project.version} ~${maven.build.timestamp}</message>
							<noJekyll>true</noJekyll>                             <!-- disable webpage processing -->
							<outputDirectory>target/repository</outputDirectory>
		
							<!-- <dryRun>true</dryRun> -->
							<repositoryOwner>vorburger</repositoryOwner>          <!-- github username -->
							<repositoryName>efactory-repository</repositoryName>  <!-- github repo name -->
							<branch>refs/heads/gh-pages</branch>                  <!-- remote branch name -->
		
							<!-- This token, obtained from https://github.com/settings/applications, 
								is encrypted using http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables -->
							<oauth2Token>${env.TOKEN}</oauth2Token>
		
							<includes>
								<include>**/*</include>
							</includes>
						</configuration>
						<executions>
							<!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
							<execution>
								<goals>
									<goal>site</goal>
								</goals>
								<phase>install</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
</project>
